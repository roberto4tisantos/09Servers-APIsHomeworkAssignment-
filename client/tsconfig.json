{
  "extends": "../tsconfig.json",
  "compilerOptions": {
    /* Language and Environment */
    "target": "ES2020",
    "useDefineForClassFields": true,

    /* Modules */    
    "module": "ESNext",
    "rootDir": "src", /* Specify the root folder within your source files. */

    /* JavaScript Support */
    "allowJs": true, /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */
    "checkJs": true, /* Enable error reporting in type-checked JavaScript files. */
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,

    /* Emit */
    "outDir": "dist", /* Specify an output folder for all emitted files. */
    //"noEmitOnError": true, /* Disable emitting files if any type checking errors are reported. */

    /* Interop Constraints */
    "esModuleInterop": false, /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "noImplicitAny": true, /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true, /* When type checking, take into account 'null' and 'undefined'. */
    "strictFunctionTypes": true, /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "strictBindCallApply": true, /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    "strictPropertyInitialization": true, /* Check for class properties that are declared but not set in the constructor. */
    "noImplicitThis": true, /* Enable error reporting when 'this' is given the type 'any'. */
    "exactOptionalPropertyTypes": true, /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noImplicitReturns": true, /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noImplicitOverride": true, /* Ensure overriding members in derived classes are marked with an override modifier. */    
  },
  "include": ["src"]
}